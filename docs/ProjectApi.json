
[{
    "methodType":"POST",
    "methodName":"createproject",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Project"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiProjectApi = new TempApi.ProjectApi();",
    "importModelParameter":["let project = new TempApi.Project();"],
    "modelNames":["project"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiProjectApi.createproject( project, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deleteproject",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiProjectApi = new TempApi.ProjectApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiProjectApi.deleteproject( projectId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAllproject",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Project]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiProjectApi = new TempApi.ProjectApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiProjectApi.getAllproject((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"getproject",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Project"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiProjectApi = new TempApi.ProjectApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiProjectApi.getproject( projectId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updateproject",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Project"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiProjectApi = new TempApi.ProjectApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiProjectApi.updateproject( projectId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
